
-->>>>>>>>>>>-------------------------------------------------------------------
-- CLEAR DATABASE.
-->>>>>>>>>>>-------------------------------------------------------------------

DROP TRIGGER TRANSACTION_trg;
/

DROP SEQUENCE TRANSACTION_seq;
/

DROP TABLE TRANSACTION_;
/

-->>>>>>>>>>>-------------------------------------------------------------------

ALTER TABLE AGENCY_ DROP COLUMN IdManager;
/

DROP TRIGGER CARD_trg;
/

DROP SEQUENCE CARD_seq;
/

DROP TABLE CARD_;
/

-->>>>>>>>>>>

ALTER TABLE OWNER_ DROP COLUMN idAccount;
/

DROP TABLE OWNER_;
/

-->>>>>>>>>>>

ALTER TABLE ACCOUNT_ DROP COLUMN nif;
/

ALTER TABLE ACCOUNT_ DROP COLUMN idAgency;
/

ALTER TABLE ACCOUNT_ DROP COLUMN idAccountType;
/

DROP TRIGGER ACCOUNT_trg;
/

DROP SEQUENCE ACCOUNT_seq;
/

DROP TABLE ACCOUNT_;
/

-->>>>>>>>>>>

drop PROCEDURE UpdateAge;
/

DROP TABLE CLIENT_;
/

-->>>>>>>>>>>

DROP TABLE EMPLOYEE_;
/

-->>>>>>>>>>>

DROP TRIGGER AGENCY_trg;
/

DROP SEQUENCE AGENCY_seq;
/

DROP TABLE AGENCY_;
/
-->>>>>>>>>>>-------------------------------------------------------------------

DROP TRIGGER LOCATION_trg;
/

DROP SEQUENCE LOCATION_seq;
/

DROP TABLE LOCATION_;
/

-->>>>>>>>>>>

DROP TRIGGER ACCOUNTTYPE_trg;
/

DROP SEQUENCE ACCOUNTTYPE_seq;
/

DROP TABLE ACCOUNTTYPE_;
/

-->>>>>>>>>>>

DROP TRIGGER TRANSACTIONTYPE_trg;
/

DROP SEQUENCE TRANSACTIONTYPE_seq;
/

DROP TABLE TRANSACTIONTYPE_;
/

-->>>>>>>>>>>-------------------------------------------------------------------

DROP TYPE AddressType;
/

-->>>>>>>>>>>

DROP TYPE ContactType;
/

-->>>>>>>>>>>-------------------------------------------------------------------

DROP TABLESPACE STATIC_TABLE_SPACE INCLUDING CONTENTS AND DATAFILES;
/

-->>>>>>>>>>>

DROP TABLESPACE NORMALS_TABLE_SPACE INCLUDING CONTENTS AND DATAFILES;
/

-->>>>>>>>>>>

DROP TABLESPACE TRANSACTION_TABLE_SPACE INCLUDING CONTENTS AND DATAFILES;
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- TYPES Address AND Contact.
-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TYPE 

CREATE TYPE AddressType AS OBJECT ( 
    street VARCHAR(45),
    districtProvince VARCHAR(45),
    country VARCHAR(45)
);
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TYPE 

CREATE TYPE ContactType AS OBJECT ( 
    nin number(3),
    Contact NUMBER(9),
    email VARCHAR(45)
);
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- TABLESPACE STATIC AND TABLES LOCATION, ACCOUNT TYPE AND TRANSACTION TYPE.
-->>>>>>>>>>>-------------------------------------------------------------------

CREATE TABLESPACE STATIC_TABLE_SPACE
DATAFILE 'static_tablesV2.dbf' SIZE 50M
AUTOEXTEND ON NEXT 5M
MAXSIZE UNLIMITED;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE LOCATION_(
    idLocation NUMBER(9) PRIMARY KEY,
    districtProvince varchar(99),
    country VARCHAR(45)
);
/

-->>>>>>>>>>>

ALTER TABLE LOCATION_ MOVE TABLESPACE STATIC_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE LOCATION_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER LOCATION_trg
BEFORE INSERT ON LOCATION_
FOR EACH ROW
BEGIN
  SELECT LOCATION_seq.NEXTVAL
  INTO :new.idLocation
  FROM dual;
END;
/

ALTER TABLE LOCATION_ MOVE TABLESPACE STATIC_TABLE_SPACE;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE ACCOUNTTYPE_(
     idAccountType NUMBER(9) PRIMARY KEY,
     nameAccountType VARCHAR(45),
     description VARCHAR(45),
     minimumRequirements VARCHAR(99)
);
/

-->>>>>>>>>>>

ALTER TABLE ACCOUNTTYPE_ MOVE TABLESPACE STATIC_TABLE_SPACE;
/
 
-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE ACCOUNTTYPE_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER ACCOUNTTYPE_trg
BEFORE INSERT ON ACCOUNTTYPE_
FOR EACH ROW
BEGIN
  SELECT ACCOUNTTYPE_seq.NEXTVAL
  INTO :new.idAccountType
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE TRANSACTIONTYPE_(
     idTransactionType NUMBER(9) PRIMARY KEY,
     nameTransactionType VARCHAR(45),
     description VARCHAR(45),
     appliedRate number,
     LimiteTransaction FLOAT
);
/

-->>>>>>>>>>>

ALTER TABLE TRANSACTIONTYPE_ MOVE TABLESPACE STATIC_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE TRANSACTIONTYPE_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER TRANSACTIONTYPE_trg
BEFORE INSERT ON TRANSACTIONTYPE_
FOR EACH ROW
BEGIN
  SELECT TRANSACTIONTYPE_seq.NEXTVAL
  INTO :new.idTransactionType
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- TABLESPACE NORMALS AND TABLES AGENCY, EMPLOYEE, CLIENT, ACCOUNT AND CARD.
-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLESPACE

CREATE TABLESPACE NORMALS_TABLE_SPACE
DATAFILE 'regular_tablesV2.dbf' SIZE 50M
AUTOEXTEND ON NEXT 5M
MAXSIZE UNLIMITED;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE AGENCY_(
    idAgency NUMBER(9) PRIMARY KEY,
    nameAgency varchar(45),
    openingHours varchar(45),
    NEmployees number,
    Contact ContactType,
    --forein keyss
    idLocation NUMBER(9),
    FOREIGN KEY (idLocation) REFERENCES LOCATION_(idLocation)
    
);
/

-->>>>>>>>>>>

ALTER TABLE AGENCY_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE AGENCY_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER AGENCY_trg
BEFORE INSERT ON AGENCY_
FOR EACH ROW
BEGIN
  SELECT AGENCY_seq.NEXTVAL
  INTO :new.idAgency
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE EMPLOYEE_(
    nif NUMBER(9) PRIMARY KEY,
    nameEmployee  VARCHAR(45),
    surname VARCHAR(45),
    Contact ContactType,
    address AddressType,
    email VARCHAR(99),
    age number(3),
    dateBirth date,
    iban VARCHAR(99),
    JobRole VARCHAR(45),
    salary NUMBER(20),
    idAgency NUMBER(9),
    CONSTRAINT FK_Employee_AgencyAccount FOREIGN KEY (idAgency) REFERENCES AGENCY_(idAgency)
);
/

-->>>>>>>>>>>

ALTER TABLE EMPLOYEE_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

-->>>>>>>>>>>-------------------------------------------------------------------

ALTER TABLE AGENCY_ ADD IdManager NUMBER(9);
/

-->>>>>>>>>>>

ALTER TABLE AGENCY_ ADD FOREIGN KEY (IdManager) REFERENCES EMPLOYEE_(nif);
/
-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE 

CREATE TABLE CLIENT_(
    nif NUMBER(9) PRIMARY KEY,
    nameClient  VARCHAR(45),
    Contact ContactType,
    address AddressType,
    email VARCHAR(99),
    age number(3),
    dateBirth date,
    jobClient Varchar(45),
    maritalStatus VARCHAR(50) CHECK (maritalStatus IN ('SOLTEIRO', 'CASADO')),
    passwordCLient VARCHAR(45),
    idAgency NUMBER(9),
    CONSTRAINT FK_Client_AgencyAccount FOREIGN KEY (idAgency) REFERENCES AGENCY_(idAgency)
);
/

-->>>>>>>>>>>

ALTER TABLE CLIENT_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

--VER ISTO
CREATE OR REPLACE PROCEDURE UpdateAge as
begin
    UPDATE CLIENT_
    set age = trunc(months_between(sysdate, dateBirth)/12);
    COMMIT;
END;
/

call UpdateAge();

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE

CREATE TABLE ACCOUNT_(
    idAccount NUMBER(9) PRIMARY KEY,
    creationDate DATE,
    balance float,
    status varchar(45) CHECK (status IN ('congelada', 'normal', 'etc')),
    nif NUMBER(9),
    idAgency NUMBER(9),
    idAccountType NUMBER(9),
    CONSTRAINT FK_ClientAccount FOREIGN KEY (nif) REFERENCES CLIENT_(nif),
    CONSTRAINT FK_AgencyAccount FOREIGN KEY (idAgency) REFERENCES AGENCY_(idAgency),
    CONSTRAINT FK_AcountTypeAccount FOREIGN KEY (idAccountType) REFERENCES ACCOUNTTYPE_(idAccountType)
);
/

ALTER TABLE ACCOUNT_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE ACCOUNT_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER ACCOUNT_trg
BEFORE INSERT ON ACCOUNT_
FOR EACH ROW
BEGIN
  SELECT ACCOUNT_seq.NEXTVAL
  INTO :new.idAccount
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE

CREATE TABLE CARD_(
    idCard NUMBER(9) PRIMARY KEY,
    expirationDate DATE,
    pin number(4),
    CVC number(3),
    cardTYpe varchar(45) CHECK (cardTYpe IN ('Debido', 'credito')),
    idAccount NUMBER(9),
    CONSTRAINT FK_AcountCard FOREIGN KEY (idAccount) REFERENCES ACCOUNT_(idAccount)
);
/

-->>>>>>>>>>>

ALTER TABLE CARD_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE CARD_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER CARD_trg
BEFORE INSERT ON CARD_
FOR EACH ROW
BEGIN
  SELECT CARD_seq.NEXTVAL
  INTO :new.idCard
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------

CREATE TABLE OWNER_ (         
    idAccount NUMBER(9),
    nif NUMBER(9), 
    ownership NUMBER(1),
    CONSTRAINT FK_Owners_Account FOREIGN KEY (idAccount) REFERENCES ACCOUNT_(idAccount),
    CONSTRAINT FK_Owners_Client FOREIGN KEY (nif) REFERENCES CLIENT_(nif)
);

/

ALTER TABLE OWNER_ MOVE TABLESPACE NORMALS_TABLE_SPACE;
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- TABLESPACE AND TABLE TRANSACTION.
-->>>>>>>>>>>-------------------------------------------------------------------

CREATE TABLESPACE TRANSACTION_TABLE_SPACE
DATAFILE 'transactionV2.dbf' SIZE 100M
AUTOEXTEND ON NEXT 10M
MAXSIZE UNLIMITED;
/

-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> CREATE TABLE

CREATE TABLE TRANSACTION_(
     idTransaction NUMBER(9) PRIMARY KEY,
     balance VARCHAR(45),
     dateTransaction date,
     status varchar(45) CHECK (status IN ('processando', 'concluido', 'etc')),
     idCard NUMBER(9),
     idTransactionType NUMBER(9),
    CONSTRAINT FK_Transaction_AcountCard FOREIGN KEY (idCard) REFERENCES CARD_(idCard),
    CONSTRAINT FK_TransactionType FOREIGN KEY (idTransactionType) REFERENCES TRANSACTIONTYPE_(idTransactionType)    
);
/

-->>>>>>>>>>>

ALTER TABLE TRANSACTION_ MOVE TABLESPACE TRANSACTION_TABLE_SPACE;
/

-->>>>>>>>>>> SEQUENCE

CREATE SEQUENCE TRANSACTION_seq
  START WITH 1
  INCREMENT BY 1;
/
 
-->>>>>>>>>>> TRIGGER

CREATE OR REPLACE TRIGGER TRANSACTION_trg
BEFORE INSERT ON TRANSACTION_
FOR EACH ROW
BEGIN
  SELECT TRANSACTION_seq.NEXTVAL
  INTO :new.idTransaction
  FROM dual;
END;
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- COMMENTS.
-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> LOCATION_

COMMENT ON TABLE LOCATION_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre localizações, incluindo ID da localização, distrito/província 
e país.';
/

-->>>>>>>>>>> ACCOUNTTYPE

COMMENT ON TABLE ACCOUNTTYPE_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre tipos de conta, incluindo ID do tipo de conta, nome, 
descrição e requisitos mínimos.';
/

-->>>>>>>>>>> TRANSACTIONTYPE

COMMENT ON TABLE TRANSACTIONTYPE_ IS 'Esta tabela destina-se ao armazenamento 
de informações sobre tipos de transação, incluindo ID do tipo de transação, 
nome, descrição, taxa aplicada e limite.';
/

-->>>>>>>>>>> AGENCY

COMMENT ON TABLE AGENCY_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre agências, incluindo ID da agência, nome da agência, horário 
de funcionamento, número de funcionários, detalhes de contato e ID de 
localização referente à tabela LOCATION_.';
/

-->>>>>>>>>>> EMPLOYEE

COMMENT ON TABLE EMPLOYEE_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre funcionários, incluindo NIF, nome do funcionário, sobrenome, 
detalhes de contato, endereço, email, idade, data de nascimento, IBAN, cargo e 
salário.';
/

-->>>>>>>>>>> CLIENT

COMMENT ON TABLE CLIENT_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre clientes, incluindo NIF, nome do cliente, detalhes de contato, 
endereço, email, idade, data de nascimento, profissão, estado civil e 
palavra-passe.';
/

-->>>>>>>>>>> ACCOUNT

COMMENT ON TABLE ACCOUNT_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre contas, incluindo ID da conta, quando foi criada, saldo e 
estado.';
/

-->>>>>>>>>>> CARD

COMMENT ON TABLE CARD_ IS 'Esta tabela destina-se ao armazenamento de 
informações sobre cartões, incluindo ID do cartão, data de validade, PIN, 
CVC e tipo de cartão.';
/

-->>>>>>>>>>> TRANSACTION

COMMENT ON TABLE TRANSACTION_ IS 'Esta tabela destina-se ao armazenamento dos 
dados sobre uma transação, efetuada ou não, com dados sobre o montante, estado 
e data de início da transação.';
/

-->>>>>>>>>>>-------------------------------------------------------------------
-- INSERTS.
-->>>>>>>>>>>-------------------------------------------------------------------

-->>>>>>>>>>> LOCATION

--Meter aqui--
INSERT ALL
    INTO LOCATION_ (districtProvince, country) VALUES ('Lisboa', 'Portugal')
    INTO LOCATION_ (districtProvince, country) VALUES ('Faro', 'Portugal')
    INTO LOCATION_ (districtProvince, country) VALUES ('Beja', 'Portugal')
    INTO LOCATION_ (districtProvince, country) VALUES ('Porto, Portugal', 'Portugal')

    -- Add more INTO clauses as needed for additional rows
SELECT * FROM dual;


-->>>>>>>>>>> ACCOUNTTYPE

--Meter aqui--
INSERT ALL
    INTO ACCOUNTTYPE_ (nameAccountType, description, minimumRequirements) VALUES ('Conta-Poupaça', 'Conta para poupar dinhero', 'null')
    INTO ACCOUNTTYPE_ (nameAccountType, description, minimumRequirements) VALUES ('Conta à ordem', 'Não tem produtos ou serviços específicos associados.', '>=18')
    INTO ACCOUNTTYPE_ (nameAccountType, description, minimumRequirements) VALUES ('Conta jovem', 'Conta para Jovens Adolescente', '>=18 e <=25')
    INTO ACCOUNTTYPE_ (nameAccountType, description, minimumRequirements) VALUES ('Conta Ordenado', 'Conta para onde vai parar o seu Oerdenado', '>=18')

    -- Add more INTO clauses as needed for additional rows
SELECT * FROM dual;


-->>>>>>>>>>> TRANSACTIONTYPE

--Meter aqui--
INSERT ALL
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('ATM_nacional', 'transferencia num atm nacional', 0, 400)
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('ATM_internacional', 'Transferencia num atm internacional', 3, 400)
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('ATM_Cambio', 'Cambio ', 5, 400)
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('Cheque', 'Deposito ou levantamento por cheque', 1, )
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('Transferencia_de_fundos', 'Transferencia de uma conta para outra', 0.5, 1000000)
    INTO TRANSACTIONTYPE_ (nameTransactionType, description, appliedRate, LimitTransaction) 
    VALUES ('Cartao', 'Transacao por cartao', 0, 1)
SELECT * FROM dual;

-->>>>>>>>>>> AGENCY

--Meter aqui--
INSERT ALL
    INTO AGENCY_ (nameAgency, openingHours, NEmployees, idLocation) 
    VALUES ('Agencia Solverde', '9:00 - 16:00', 3, 1)
    INTO AGENCY_ (nameAgency, openingHours, NEmployees, idLocation) 
    VALUES ('Agencia Betano', '8:30 - 15:30', 3, 2)
    INTO AGENCY_ (nameAgency, openingHours, NEmployees, idLocation) 
    VALUES ('Agencia Betclick', '10:00 - 17:00', 3, 3)
    INTO AGENCY_ (nameAgency, openingHours, NEmployees, idLocation) 
    VALUES ('Agencia Vamos Apostar', '9:30 - 17:00', 3, 4)
    -- Add more INTO clauses as needed for additional agencies
SELECT * FROM dual;


-->>>>>>>>>>> EMPLOYEE

--Meter aqui--
INSERT ALL
    INTO EMPLOYEE_ (nif, nameEmployee, surname, address, email, age, dateBirth, iban, JobRole, salary, idAgency) 
    VALUES (123456789, 'Pedro', 'Gonçalves', 'Rua Marmelo', 'pedro@gmail.com', 20, TO_DATE('2003-06-26', 'YYYY-MM-DD'), 'ABC123456789', 'Gerente', 10000, 1)
    INTO EMPLOYEE_ (nif, nameEmployee, surname, address, email, age, dateBirth, iban, JobRole, salary, idAgency) 
    VALUES (987654321, 'Ricardo', 'Vilhena', 'Rua M&M', 'ricardo@gmail.com', 18, TO_DATE('2004-12-18', 'YYYY-MM-DD'), 'DEF987654321', 'Chefe Markting', 7500, 2)
    INTO EMPLOYEE_ (nif, nameEmployee, surname, address, email, age, dateBirth, iban, JobRole, salary, idAgency) 
    VALUES (234567890, ';Marco', 'Valente', 'Rua Vodka', 'marco@gmail.com', 21, TO_DATE('2002-06-06', 'YYYY-MM-DD'), 'GHI234567890', 'Chefe Designe ', 8000, 1)
    INTO EMPLOYEE_ (nif, nameEmployee, surname, address, email, age, dateBirth, iban, JobRole, salary, idAgency) 
    VALUES (234567890, ';Rodrigo', 'Pimenta', 'Rua Getto', 'reodrigo@gmail.com', 20, TO_DATE('2003-06-15', 'YYYY-MM-DD'), 'GHI234567890', 'Rececionista', 2000, 3)
    INTO EMPLOYEE_ (nif, nameEmployee, surname, address, email, age, dateBirth, iban, JobRole, salary, idAgency) 
    VALUES (234567890, ';Lucas', 'Martins', 'Rua Ginasio', 'lucas@gmail.com', 20, TO_DATE('2003-08-16', 'YYYY-MM-DD'), 'GHI234567890', 'Homem das Limpezas ', 1000, 2)
        -- Add more INTO clauses as needed for additional employees
SELECT * FROM dual;


-->>>>>>>>>>> CLIENT

--Meter aqui--
INSERT ALL
    INTO CLIENT_ (nif, nameClient, address, age, dateBirth, jobClient, maritalStatus, passwordCLient, idAgency) 
    VALUES (123456789, 'Alice', 'Rua Ola', 28, TO_DATE('1995-03-15', 'YYYY-MM-DD'), 'Engenheiro', 'CASADO', 'alice123', 1)
    INTO CLIENT_ (nif, nameClient, address, email, age, dateBirth, jobClient, maritalStatus, passwordCLient, idAgency) 
    VALUES (987654321, 'Bob', '456 Oak St', 32, TO_DATE('1990-11-20', 'YYYY-MM-DD'), 'Professor', 'SOLTEIRO', 'bob456', 2)
    INTO CLIENT_ (nif, nameClient, address, email, age, dateBirth, jobClient, maritalStatus, passwordCLient, idAgency) 
    VALUES (234567890, 'Charlie', '789 Maple St', 24, TO_DATE('1998-06-10', 'YYYY-MM-DD'), 'Designer', 'SOLTEIRO', 'charlie789', 1)
    -- Add more INTO clauses as needed for additional clients
SELECT * FROM dual;


-->>>>>>>>>>> ACCOUNT

--Meter aqui--
INSERT ALL
    INTO ACCOUNT_ (creationDate, balance, status, nif, idAgency, idAccountType) 
    VALUES (TO_DATE('2023-01-15', 'YYYY-MM-DD'), 5000.00, 'normal', 123456789, 1, 1)
    INTO ACCOUNT_ (creationDate, balance, status, nif, idAgency, idAccountType) 
    VALUES (TO_DATE('2023-02-20', 'YYYY-MM-DD'), 7000.00, 'congelada', 987654321, 2, 2)
    INTO ACCOUNT_ (creationDate, balance, status, nif, idAgency, idAccountType) 
    VALUES (TO_DATE('2023-03-10', 'YYYY-MM-DD'), 3000.00, 'normal', 234567890, 1, 3)
    -- Add more INTO clauses as needed for additional accounts
SELECT * FROM dual;



-->>>>>>>>>>> CARD

--Meter aqui--
INSERT ALL
    INTO CARD_ (expirationDate, pin, CVC, cardTYpe, idAccount) 
    VALUES (TO_DATE('2025-01-15', 'YYYY-MM-DD'), 1234, 789, 'debito', 1)
    INTO CARD_ (expirationDate, pin, CVC, cardTYpe, idAccount) 
    VALUES (TO_DATE('2024-02-20', 'YYYY-MM-DD'), 5678, 456, 'credito', 2)
    INTO CARD_ (expirationDate, pin, CVC, cardTYpe, idAccount) 
    VALUES (TO_DATE('2023-03-10', 'YYYY-MM-DD'), 9876, 123, 'debito', 3)
    -- Add more INTO clauses as needed for additional cards
SELECT * FROM dual;


-->>>>>>>>>>> OWNER

--Meter aqui--
INSERT ALL
    INTO OWNER_ (idAccount, nif, ownership) 
    VALUES (1, 123456789, 1)
    INTO OWNER_ (idAccount, nif, ownership) 
    VALUES (2, 987654321, 0)
    INTO OWNER_ (idAccount, nif, ownership) 
    VALUES (3, 234567890, 1)
    -- Add more INTO clauses as needed for additional owner records
SELECT * FROM dual;


-->>>>>>>>>>> TRANSACTION

--Meter aqui--
-- Inserting multiple rows into the TRANSACTION_ table
INSERT ALL
    INTO TRANSACTION_ (balance, dateTransaction, status, idCard, idTransactionType) 
    VALUES ('100.00', TO_DATE('2023-01-15', 'YYYY-MM-DD'), 'concluido', 1, 1)
    INTO TRANSACTION_ (balance, dateTransaction, status, idCard, idTransactionType) 
    VALUES ('50.00', TO_DATE('2023-02-20', 'YYYY-MM-DD'), 'processando', 2, 2)
    INTO TRANSACTION_ (balance, dateTransaction, status, idCard, idTransactionType) 
    VALUES ('200.00', TO_DATE('2023-03-10', 'YYYY-MM-DD'), 'concluido', 3, 3)
    -- Add more INTO clauses as needed for additional transactions
SELECT * FROM dual;